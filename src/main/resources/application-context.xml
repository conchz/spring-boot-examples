<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-lazy-init="true">

    <description>Spring settings</description>

    <context:property-placeholder ignore-resource-not-found="true"
                                  location="classpath:hibernate.properties"/>

    <context:annotation-config/>
    <context:component-scan base-package="com.github.dolphineor.spring.*"/>


    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="poolName" value="springHikariCP"/>
        <property name="minimumIdle" value="${hibernate.hikari.minimumIdle}"/>
        <property name="maximumPoolSize" value="${hibernate.hikari.maximumPoolSize}"/>
        <property name="connectionTimeout" value="${hibernate.hikari.connectionTimeout}"/>
        <property name="idleTimeout" value="${hibernate.hikari.idleTimeout}"/>
        <property name="connectionTestQuery" value="${hibernate.hikari.connectionTestQuery}"/>
        <property name="dataSourceClassName" value="${hibernate.hikari.dataSourceClassName}"/>
        <property name="dataSourceProperties">
            <props>
                <prop key="url">${hibernate.hikari.dataSource.url}</prop>
                <prop key="user">${hibernate.hikari.dataSource.user}</prop>
                <prop key="password">${hibernate.hikari.dataSource.password}</prop>
                <prop key="cachePrepStmts">${hibernate.hikari.dataSource.cachePrepStmts}</prop>
                <prop key="prepStmtCacheSize">${hibernate.hikari.dataSource.prepStmtCacheSize}</prop>
                <prop key="prepStmtCacheSqlLimit">${hibernate.hikari.dataSource.prepStmtCacheSqlLimit}</prop>
            </props>
        </property>
    </bean>

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg ref="hikariConfig"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.archive.autodetection">${hibernate.archive.autodetection}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
            </props>
        </property>
    </bean>

    <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 启用Spring事务注解功能 -->
    <tx:annotation-driven transaction-manager="txManager"/>


    <!-- HttpMessageConverter -->
    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
        <constructor-arg value="UTF-8"/>
    </bean>
    <bean id="mappingJackson2HttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="objectMapper">
            <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
                <property name="failOnEmptyBeans" value="false"/>
            </bean>
        </property>
    </bean>
    <bean id="formHttpMessageConverter" class="org.springframework.http.converter.FormHttpMessageConverter"/>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJackson2HttpMessageConverter"/>
                <ref bean="stringHttpMessageConverter"/>
                <ref bean="formHttpMessageConverter"/>
            </list>
        </property>
    </bean>
</beans>